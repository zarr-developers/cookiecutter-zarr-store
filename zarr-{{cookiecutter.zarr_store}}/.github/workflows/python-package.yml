# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Linux Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        numpy_version: ['>=1.22.0', '==1.20.*']
        exclude:
          - python-version: '3.10'
            numpy_version: '==1.20.*'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
          channels: conda-forge
          python-version: {{ "${{ matrix.python-version }}" }}
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    # Runs a set of commands using the runners shell
    - name: Create Conda environment with the rights deps
      shell: "bash -l {0}"
      run: |
        {{ "conda create -n zarr-env python==${{matrix.python-version}} zarr pip flake8 mypy" }}
    - name: Install dependencies
      shell: "bash -l {0}"
      run: |
        {% raw %}
        conda activate zarr-env
        python -m pip install --upgrade pip
        python -m pip install -U pip setuptools wheel codecov line_profiler
        python -m pip install -rrequirements_dev_minimal.txt numpy${{matrix.numpy_version}} -rrequirements_dev_optional.txt
        python -m pip install .
        python -m pip freeze
        {% endraw %}
    - name: Tests
      shell: "bash -l {0}"
      env:
        COVERAGE_FILE: {{ ".coverage.${{matrix.python-version}}.${{matrix.numpy_version}}" }}
        ZARR_V3_EXPERIMENTAL_API: 1
      run: |
        conda activate zarr-env
        mkdir ~/blob_emulator
        azurite -l ~/blob_emulator --debug debug.log 2>&1 > stdouterr.log &
        pytest --cov=zarr_{{ cookiecutter.zarr_store}} --cov-config=pyproject.toml --doctest-plus --cov-report xml --cov=./ --timeout=300
    - uses: codecov/codecov-action@v3
      with:
        verbose: true # optional (default = false)
